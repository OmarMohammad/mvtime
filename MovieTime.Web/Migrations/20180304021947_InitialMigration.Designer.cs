// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using MovieTime.Web.Movie.Persistance;

namespace MovieTime.Web.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20180304021947_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieTime.Web.Entities.DbGenre", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CustomField");

                    b.Property<Guid?>("DbMovieId");

                    b.HasKey("Name");

                    b.HasIndex("DbMovieId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MovieTime.Web.MovieDetails.DbMovie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Actors")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("ImdbId");

                    b.Property<string>("Plot")
                        .IsRequired()
                        .HasMaxLength(600);

                    b.Property<string>("Poster")
                        .IsRequired();

                    b.Property<double>("Rated");

                    b.Property<int>("RunTimeInMinutes")
                        .HasMaxLength(1440);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Writer")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("Year");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MovieTime.Web.Entities.DbGenre", b =>
                {
                    b.HasOne("MovieTime.Web.MovieDetails.DbMovie")
                        .WithMany("Genres")
                        .HasForeignKey("DbMovieId");
                });
#pragma warning restore 612, 618
        }
    }
}
